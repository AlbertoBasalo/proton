openapi: '3.0.2'
info:
  title: Proton API
  description: Backend API example API declaration
  version: '1.0'
servers:
  - url: /v1
paths:
  /categories:
    get:
      description: Get the Category list
      operationId: getCategories
      responses:
        200:
          $ref: '#/components/responses/200'
    post:
      description: Adds a Category to the list
      operationId: postCategory
      security:
        - bearerAuth: []
      responses:
        201:
          $ref: '#/components/responses/201'
        401:
          $ref: '#/components/responses/401'
        409:
          $ref: '#/components/responses/400'
  /categories/{id}:
    get:
      description: Get a Category by Id
      operationId: getCategoryById
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    put:
      description: Updates a Category at the list
      operationId: putCategory
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/200'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
    delete:
      description: Deletes a Category from the list
      operationId: deleteCategory
      security:
        - bearerAuth: []
      responses:
        204:
          $ref: '#/components/responses/200'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
  /categories/{id}/items:
    get:
      description: Get Items by CategoryId
      operationId: getItemsByCategoryId
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /categories/{id}/items/count:
    get:
      description: Get Metadata of Items by CategoryId
      operationId: getItemsMetadataByCategoryId
      responses:
        206:
          $ref: '#/components/responses/206'
        404:
          $ref: '#/components/responses/404'
  /items:
    get:
      description: Get the Item list
      operationId: getItems
      parameters:
        - in: query
          name: byCategory
          required: false
          schema:
            type: string
          description: The items of a given category
      responses:
        200:
          $ref: '#/components/responses/200'
    post:
      description: Adds a Item to the list
      operationId: postItem
      security:
        - bearerAuth: []
      responses:
        201:
          $ref: '#/components/responses/201'
        409:
          $ref: '#/components/responses/400'
  /items/{id}:
    get:
      description: Get a Item by Id
      operationId: getItemById
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    put:
      description: Updates a Item at the list
      operationId: putItem
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    delete:
      description: Deletes a Item from the list
      operationId: deleteItem
      security:
        - bearerAuth: []
      responses:
        204:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /projects:
    get:
      description: Get the Project list
      operationId: getProjects
      responses:
        200:
          $ref: '#/components/responses/200'
    post:
      description: Adds a Project to the list
      operationId: postProject
      security:
        - bearerAuth: []
      responses:
        201:
          $ref: '#/components/responses/201'
        401:
          $ref: '#/components/responses/401'
        409:
          $ref: '#/components/responses/400'
  /projects/{id}:
    get:
      description: Get a Project by Id
      operationId: getProjectById
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    put:
      description: Updates a Project at the list
      operationId: putProject
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/200'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
    delete:
      description: Deletes a Project from the list
      operationId: deleteProject
      security:
        - bearerAuth: []
      responses:
        204:
          $ref: '#/components/responses/200'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
  /projects/{id}/tasks:
    get:
      description: Get Tasks by ProjectId
      operationId: getTaksByProjectId
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /projects/{id}/tasks/count:
    get:
      description: Get Metadata of Tasks by ProjectId
      operationId: getTasksMetadataByProjectId
      responses:
        206:
          $ref: '#/components/responses/206'
        404:
          $ref: '#/components/responses/404'
  /projects/{id}/transactions:
    get:
      description: Get Transactions by ProjectId
      operationId: getTransactionsByProjectId
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /projects/{id}/transactions/count:
    get:
      description: Get Metadata of Transactions by ProjectId
      operationId: getTransactionsMetadataByProjectId
      responses:
        206:
          $ref: '#/components/responses/206'
        404:
          $ref: '#/components/responses/404'
  /tasks:
    get:
      description: Get the Task list
      operationId: getTasks
      parameters:
        - in: query
          name: byCategory
          required: false
          schema:
            type: string
          description: The Tasks of a given category
      responses:
        200:
          $ref: '#/components/responses/200'
    post:
      description: Adds a Task to the list
      operationId: postTask
      security:
        - bearerAuth: []
      responses:
        201:
          $ref: '#/components/responses/201'
        409:
          $ref: '#/components/responses/400'
  /tasks/{id}:
    get:
      description: Get a Task by Id
      operationId: getTaskById
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    put:
      description: Updates a Task at the list
      operationId: putTask
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    delete:
      description: Deletes a Task from the list
      operationId: deleteTask
      security:
        - bearerAuth: []
      responses:
        204:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /transactions:
    get:
      description: Get the Transaction list
      operationId: getTransactions
      parameters:
        - in: query
          name: byCategory
          required: false
          schema:
            type: string
          description: The Transactions of a given category
      responses:
        200:
          $ref: '#/components/responses/200'
    post:
      description: Adds a Transaction to the list
      operationId: postTransaction
      security:
        - bearerAuth: []
      responses:
        201:
          $ref: '#/components/responses/201'
        409:
          $ref: '#/components/responses/400'
  /transactions/{id}:
    get:
      description: Get a Transaction by Id
      operationId: getTransactionById
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    put:
      description: Updates a Transaction at the list
      operationId: putTransaction
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    delete:
      description: Deletes a Transaction from the list
      operationId: deleteTransaction
      security:
        - bearerAuth: []
      responses:
        204:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /users:
    post:
      description: Adds a User to the list
      operationId: postUser
      responses:
        201:
          $ref: '#/components/responses/201'
        409:
          $ref: '#/components/responses/400'
  /users/activations:
    put:
      description: Updates a User activation state
      operationId: putUserActivation
      parameters:
        - in: query
          name: uat
          required: true
          schema:
            type: string
          description: User Token
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /users/credentials:
    get:
      description: Gets a User session by credentials
      operationId: getUserSessionByCredentials
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: User Email
        - in: query
          name: password
          required: true
          schema:
            type: string
          description: User Password
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /users/{id}:
    get:
      description: Get a User by Id
      operationId: getUserById
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    put:
      description: Updates a User at the list
      operationId: putUser
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    delete:
      description: Deletes a User from the list
      operationId: deleteUser
      security:
        - bearerAuth: []
      responses:
        204:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /test:
    get:
      description: Used as smoke test. Should return OK
      operationId: test
      responses:
        200:
          $ref: '#/components/responses/200'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    '200':
      description: Successful call
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/200'
    '201':
      description: Successful added call
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/201'
    '204':
      description: Successful deleted call
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/204'
    '206':
      description: Partial Content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/206'
    '400':
      description: Bad request. Check your parameters or payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400'
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/401'
    '404':
      description: The resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404'
    '5XX':
      description: Unexpected server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/5XX'

  schemas:
    200:
      title: Successful processed response
      type: object
    201:
      title: Successful added response
      type: object
    204:
      title: Successful deleted response
    206:
      title: Partial Content
      type: object
    400:
      title: Request error response
      type: object
    401:
      title: Authorization error response
      type: object
    404:
      title: Not found response
      type: object
    5XX:
      title: Server response
      type: object
