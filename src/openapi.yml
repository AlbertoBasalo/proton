openapi: '3.0.2'
info:
  title: Proton API
  description: Backend API example API declaration
  version: '1.0'
servers:
  - url: /api/v1
paths:
  /categories:
    get:
      description: Get the category list
      operationId: getCategories
      responses:
        200:
          $ref: '#/components/responses/200'
    post:
      description: Adds a category to the list
      operationId: postCategory
      responses:
        201:
          $ref: '#/components/responses/201'
        409:
          $ref: '#/components/responses/400'
  /categories/{categoryId}:
    get:
      description: Get a category by Id
      operationId: getCategoryById
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    put:
      description: Updates a category at the list
      operationId: putCategory
      responses:
        200:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
    delete:
      description: Deletes a category from the list
      operationId: deleteCategory
      responses:
        204:
          $ref: '#/components/responses/200'
        404:
          $ref: '#/components/responses/404'
  /test:
    get:
      description: Used as smoke test. Should return OK
      operationId: test
      responses:
        200:
          $ref: '#/components/responses/200'

components:
  responses:
    '200':
      description: Successful call
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/200'
    '201':
      description: Successful added call
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/201'
    '204':
      description: Successful deleted call
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/204'
    '400':
      description: Bad request. Check your parameters or payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400'
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/401'
    '404':
      description: The resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404'
    '5XX':
      description: Unexpected server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/5XX'

  schemas:
    200:
      title: Successful processed response
      type: object
    201:
      title: Successful added response
      type: object
    204:
      title: Successful deleted response
    400:
      title: Request error response
      type: object
    401:
      title: Authorization error response
      type: object
    404:
      title: Not found response
      type: object
    5XX:
      title: Server response
      type: object
